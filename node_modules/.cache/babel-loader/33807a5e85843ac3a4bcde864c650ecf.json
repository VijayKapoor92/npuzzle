{"ast":null,"code":"import{STORAGE_DATABASE,STORAGE_CONFIG_DATABASE,PUZZLE_MODE_3X3}from\"../utils/constants\";export var Storage={db:localStorage.getItem(STORAGE_DATABASE),response:function response(){return{status:1,message:\"\"};},connect:function connect(){if(!(\"localStorage\"in window)){alert(\"Erro ao conectar!\");return;}Storage.createDB();},getLastId:function getLastId(){return Storage.get().length;},createDB:function createDB(){if(Storage.db&&Storage.db.length)return;localStorage.setItem(STORAGE_DATABASE,Data.push([]));},insert:function insert(game){var g=Storage.get();if(g.filter(function(gg){return gg.id===game.id;}).length)return;for(var i=0;i<g.length;i++){if(g[i].status===\"saved\")g[i].status=\"stop\";}g.push(game);localStorage.setItem(STORAGE_DATABASE,Data.push(g));},update:function update(_ref){var id=_ref.id,status=_ref.status,puzzle=_ref.puzzle,steps=_ref.steps;var game=Storage.get();var g=game.filter(function(dd){return dd.id===id;}).map(function(dd){dd.status=status;dd.puzzle=puzzle;dd.steps=steps;return dd;});localStorage.setItem(STORAGE_DATABASE,Data.push(game));},delete:function _delete(id){var d=Storage.get();var game=d.filter(function(dd){return dd.id!==id;});localStorage.setItem(STORAGE_DATABASE,Data.push(game));},get:function get(){return Data.pull(localStorage.getItem(STORAGE_DATABASE));}};var Data={push:function push(data){return JSON.stringify(data);},pull:function pull(data){return JSON.parse(data);},content:[],filterById:function filterById(id){return Storage.get().filter(function(s){return s.id===Storage.getId();});}};","map":{"version":3,"sources":["/Users/vijaykapoor/Documents/github/npuzzle/src/dao/index.js"],"names":["STORAGE_DATABASE","STORAGE_CONFIG_DATABASE","PUZZLE_MODE_3X3","Storage","db","localStorage","getItem","response","status","message","connect","window","alert","createDB","getLastId","get","length","setItem","Data","push","insert","game","g","filter","gg","id","i","update","puzzle","steps","dd","map","delete","d","pull","data","JSON","stringify","parse","content","filterById","s","getId"],"mappings":"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","sourcesContent":["import {STORAGE_DATABASE, STORAGE_CONFIG_DATABASE, PUZZLE_MODE_3X3} from \"../utils/constants\";\n\nexport\n  const Storage = {\n    db: localStorage.getItem(STORAGE_DATABASE),\n    response: () => ({status: 1, message: \"\"}),\n    connect: () => {\n      if (!(\"localStorage\" in window)) {\n        alert(\"Erro ao conectar!\");\n        return;\n      }\n\n      Storage.createDB();\n    },\n    getLastId: () => Storage.get().length,\n    createDB: () => {\n      if (Storage.db && Storage.db.length)\n        return;\n\n      localStorage.setItem(STORAGE_DATABASE, Data.push([]));\n    },\n    insert: (game) => {\n      let g = Storage.get();\n      if (g.filter(gg => gg.id === game.id).length)\n        return;\n\n      for (let i = 0; i < g.length; i++)\n        if (g[i].status === \"saved\")\n          g[i].status = \"stop\";\n\n      g.push(game);\n      localStorage.setItem(STORAGE_DATABASE, Data.push(g));\n    },\n    update: ({id, status, puzzle, steps}) => {\n      const game = Storage.get();\n      const g = game.filter(dd => dd.id === id).map(dd => {\n        dd.status = status;\n        dd.puzzle = puzzle;\n        dd.steps = steps;\n        return dd;\n      });\n      localStorage.setItem(STORAGE_DATABASE, Data.push(game));\n    },\n    delete: id => {\n      const d = Storage.get();\n      const game = d.filter(dd => dd.id !== id);\n      localStorage.setItem(STORAGE_DATABASE, Data.push(game));\n    },\n    get: () => Data.pull(localStorage.getItem(STORAGE_DATABASE))\n  };\n\nconst Data = {\n  push: (data) => JSON.stringify(data),\n  pull: (data) => JSON.parse(data),\n  content: [],\n  filterById: id => Storage.get().filter(s => s.id === Storage.getId())\n};"]},"metadata":{},"sourceType":"module"}