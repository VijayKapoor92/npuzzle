{"ast":null,"code":"const STORAGE_DATABASE = \"game\",\n      DAO_STATUS_CONNECTED_OK = 1,\n      DAO_STATUS_CONNECTED_ERROR = -1,\n      DAO_ID_SIZE = 8;\nexport const Storage = {\n  db: localStorage.getItem(STORAGE_DATABASE),\n  response: () => ({\n    status: 1,\n    message: \"\"\n  }),\n  connect: () => {\n    if (!(\"localStorage\" in window)) {\n      alert(\"Erro ao conectar!\");\n      return;\n    }\n\n    Storage.createDB();\n  },\n  createDB: () => {\n    if (Storage.db && Storage.db.length) return;\n    localStorage.setItem(STORAGE_DATABASE, Data.push([]));\n  },\n  insert: game => localStorage.setItem(STORAGE_DATABASE, Data.push([game])),\n  update: ({\n    id,\n    status,\n    puzzle\n  }) => {\n    const d = Storage.get();\n    console.log(d.filter(dd => dd.id = id).map(dd => {\n      dd.status = status;\n      dd.puzzle = puzzle;\n    }));\n  },\n  delete: () => {},\n  get: () => Data.pull(localStorage.getItem(STORAGE_DATABASE))\n};\nconst Data = {\n  push: data => JSON.stringify(data),\n  pull: data => JSON.parse(data),\n  content: []\n};","map":{"version":3,"sources":["/Users/vijaykapoor/Documents/github/npuzzle/src/dao/index.js"],"names":["STORAGE_DATABASE","DAO_STATUS_CONNECTED_OK","DAO_STATUS_CONNECTED_ERROR","DAO_ID_SIZE","Storage","db","localStorage","getItem","response","status","message","connect","window","alert","createDB","length","setItem","Data","push","insert","game","update","id","puzzle","d","get","console","log","filter","dd","map","delete","pull","data","JSON","stringify","parse","content"],"mappings":"AAAA,MACEA,gBAAgB,GAAG,MADrB;AAAA,MAEEC,uBAAuB,GAAG,CAF5B;AAAA,MAGEC,0BAA0B,GAAG,CAAC,CAHhC;AAAA,MAIEC,WAAW,GAAG,CAJhB;AAMA,OACE,MAAMC,OAAO,GAAG;AACdC,EAAAA,EAAE,EAAEC,YAAY,CAACC,OAAb,CAAqBP,gBAArB,CADU;AAEdQ,EAAAA,QAAQ,EAAE,OAAO;AAACC,IAAAA,MAAM,EAAE,CAAT;AAAYC,IAAAA,OAAO,EAAE;AAArB,GAAP,CAFI;AAGdC,EAAAA,OAAO,EAAE,MAAM;AACb,QAAI,EAAE,kBAAkBC,MAApB,CAAJ,EAAiC;AAC/BC,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACA;AACD;;AAEDT,IAAAA,OAAO,CAACU,QAAR;AACD,GAVa;AAWdA,EAAAA,QAAQ,EAAE,MAAM;AACd,QAAIV,OAAO,CAACC,EAAR,IAAcD,OAAO,CAACC,EAAR,CAAWU,MAA7B,EACE;AAEFT,IAAAA,YAAY,CAACU,OAAb,CAAqBhB,gBAArB,EAAuCiB,IAAI,CAACC,IAAL,CAAU,EAAV,CAAvC;AACD,GAhBa;AAiBdC,EAAAA,MAAM,EAAGC,IAAD,IAAUd,YAAY,CAACU,OAAb,CAAqBhB,gBAArB,EAAuCiB,IAAI,CAACC,IAAL,CAAU,CAACE,IAAD,CAAV,CAAvC,CAjBJ;AAkBdC,EAAAA,MAAM,EAAE,CAAC;AAACC,IAAAA,EAAD;AAAKb,IAAAA,MAAL;AAAac,IAAAA;AAAb,GAAD,KAA0B;AAChC,UAAMC,CAAC,GAAGpB,OAAO,CAACqB,GAAR,EAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,EAAE,IAAIA,EAAE,CAACP,EAAH,GAAQA,EAAvB,EAA2BQ,GAA3B,CAA+BD,EAAE,IAAI;AAC/CA,MAAAA,EAAE,CAACpB,MAAH,GAAYA,MAAZ;AACAoB,MAAAA,EAAE,CAACN,MAAH,GAAYA,MAAZ;AACD,KAHW,CAAZ;AAID,GAxBa;AAyBdQ,EAAAA,MAAM,EAAE,MAAM,CAAE,CAzBF;AA0BdN,EAAAA,GAAG,EAAE,MAAMR,IAAI,CAACe,IAAL,CAAU1B,YAAY,CAACC,OAAb,CAAqBP,gBAArB,CAAV;AA1BG,CAAhB;AA6BF,MAAMiB,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAGe,IAAD,IAAUC,IAAI,CAACC,SAAL,CAAeF,IAAf,CADL;AAEXD,EAAAA,IAAI,EAAGC,IAAD,IAAUC,IAAI,CAACE,KAAL,CAAWH,IAAX,CAFL;AAGXI,EAAAA,OAAO,EAAE;AAHE,CAAb","sourcesContent":["const\n  STORAGE_DATABASE = \"game\",\n  DAO_STATUS_CONNECTED_OK = 1,\n  DAO_STATUS_CONNECTED_ERROR = -1,\n  DAO_ID_SIZE = 8;\n\nexport\n  const Storage = {\n    db: localStorage.getItem(STORAGE_DATABASE),\n    response: () => ({status: 1, message: \"\"}),\n    connect: () => {\n      if (!(\"localStorage\" in window)) {\n        alert(\"Erro ao conectar!\");\n        return;\n      }\n\n      Storage.createDB();\n    },\n    createDB: () => {\n      if (Storage.db && Storage.db.length)\n        return;\n\n      localStorage.setItem(STORAGE_DATABASE, Data.push([]))\n    },\n    insert: (game) => localStorage.setItem(STORAGE_DATABASE, Data.push([game])),\n    update: ({id, status, puzzle}) => {\n      const d = Storage.get();\n      console.log(d.filter(dd => dd.id = id).map(dd => {\n        dd.status = status;\n        dd.puzzle = puzzle;\n      }));\n    },\n    delete: () => {},\n    get: () => Data.pull(localStorage.getItem(STORAGE_DATABASE))\n  };\n\nconst Data = {\n  push: (data) => JSON.stringify(data),\n  pull: (data) => JSON.parse(data),\n  content: []\n};"]},"metadata":{},"sourceType":"module"}