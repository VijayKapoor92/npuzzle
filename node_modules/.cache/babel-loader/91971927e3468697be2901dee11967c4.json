{"ast":null,"code":"import _defineProperty from \"/Users/vijaykapoor/Documents/github/npuzzle/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/vijaykapoor/Documents/github/npuzzle/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment } from \"react\";\nimport Game from \"./components/Game\";\nimport SettingsIcon from \"react-icons/lib/fa/cog\";\nimport CloseIcon from \"react-icons/lib/fa/close\";\nimport TrophyIcon from \"react-icons/lib/fa/trophy\";\nimport { PUZZLE_MODE_EASY } from \"./utils/constants\";\nimport { Puzzles, Answers } from \"./utils/puzzles\";\nimport { getPositionZero, shuffle } from \"./utils\";\nlet s = false;\n\nif (localStorage.getItem(\"game\").length) {\n  let json = JSON.parse(localStorage.getItem(\"game\"));\n  if (json.status) s = true;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStart = () => {\n      localStorage.setItem(\"game\", JSON.stringify({\n        \"status\": true,\n        puzzle: []\n      }));\n      this.setState({\n        status: true\n      });\n    };\n\n    this.handleExit = () => {\n      localStorage.setItem(\"game\", JSON.stringify({\n        \"status\": false,\n        puzzle: []\n      }));\n      this.setState({\n        status: false,\n        winner: false,\n        steps: 0\n      });\n    };\n\n    this.handleSaveAndExit = puzzle => {\n      localStorage.setItem(\"game\", JSON.stringify({\n        \"status\": false,\n        puzzle\n      }));\n      this.setState({\n        status: false\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState(state => ({\n        squares: shuffle(Puzzles[PUZZLE_MODE_EASY]),\n        steps: 0\n      }));\n    };\n\n    this.handleClickSquare = (value, position) => {\n      let squares = this.state.squares;\n      const zero = getPositionZero(squares);\n      const isSameRow = position.i === zero.i && Math.abs(position.j - zero.j) === 1;\n      const isSameColumn = position.j === zero.j && Math.abs(position.i - zero.i) === 1;\n\n      if (value === 0 || !(isSameColumn || isSameRow)) {\n        return;\n      }\n\n      squares[position.i][position.j] = 0;\n      squares[zero.i][zero.j] = value;\n      let counter = 0,\n          winner = false;\n      const le = squares.length * squares[squares.length - 1].length;\n\n      for (let i = 0; i < squares.length; i++) for (let j = 0; j < squares[i].length; j++) if (squares[i][j] === Answers[PUZZLE_MODE_EASY][i][j]) counter++;\n\n      if (counter < le) counter = 0;\n      if (counter === le) winner = true;\n      this.setState(state => _objectSpread({}, state, {\n        squares,\n        steps: state.steps + 1,\n        winner,\n        openWinner: winner\n      }));\n    };\n\n    this.handleCloseWinner = () => this.setState({\n      openWinner: false\n    });\n\n    this.handleOpenConfig = () => this.setState({\n      isConfigOpen: true\n    });\n\n    this.renderFirstPage = () => React.createElement(\"div\", {\n      className: \"first-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"first-page__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"N-PUZZLE\"), React.createElement(\"div\", {\n      className: \"first-page__subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Venha se divertir\"), React.createElement(\"div\", {\n      className: \"first-page__action-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn-start\",\n      onClick: this.handleStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Jogar\")));\n\n    this.renderConfig = () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"N\\xEDvel:\"), React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"F\\xE1cil\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"M\\xE9dio\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Dif\\xEDcil\"))));\n\n    this.state = {\n      squares: shuffle(Puzzles[PUZZLE_MODE_EASY]),\n      steps: 0,\n      status: s,\n      isConfigOpen: false,\n      isWinner: false,\n      openWinner: false\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          status = _this$state.status,\n          squares = _this$state.squares,\n          steps = _this$state.steps,\n          isConfigOpen = _this$state.isConfigOpen,\n          winner = _this$state.winner,\n          openWinner = _this$state.openWinner; //todo: logica para salvar o jogo e sair.\n    //todo: criar as views (IntroView e GameView).\n    //todo: logica para configuracoes.\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, isConfigOpen && this.renderConfig(), React.createElement(\"div\", {\n      className: \"winner-backdrop \".concat(openWinner ? 'show' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"winner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"winner-container__dismiss\",\n      onClick: () => this.handleCloseWinner(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"winner-container__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Parab\\xE9ns!\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(TrophyIcon, {\n      style: {\n        fontSize: 64\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"winner-container__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontSize: 24,\n        textAlign: \"center\",\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, steps)))), status ? React.createElement(Game, {\n      winner: winner,\n      squares: squares,\n      steps: steps,\n      onExit: this.handleExit,\n      onSaveAndExit: this.handleSaveAndExit,\n      onReset: this.handleReset,\n      onClickSquare: this.handleClickSquare,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }) : this.renderFirstPage());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vijaykapoor/Documents/github/npuzzle/src/App.js"],"names":["React","Component","Fragment","Game","SettingsIcon","CloseIcon","TrophyIcon","PUZZLE_MODE_EASY","Puzzles","Answers","getPositionZero","shuffle","s","localStorage","getItem","length","json","JSON","parse","status","App","constructor","props","handleStart","setItem","stringify","puzzle","setState","handleExit","winner","steps","handleSaveAndExit","handleReset","state","squares","handleClickSquare","value","position","zero","isSameRow","i","Math","abs","j","isSameColumn","counter","le","openWinner","handleCloseWinner","handleOpenConfig","isConfigOpen","renderFirstPage","renderConfig","isWinner","render","fontSize","textAlign","marginTop"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,iBAAjC;AACA,SAAQC,eAAR,EAAyBC,OAAzB,QAAuC,SAAvC;AAEA,IAAIC,CAAC,GAAG,KAAR;;AAEA,IAAIC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,MAAjC,EAAyC;AACvC,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACA,MAAIE,IAAI,CAACG,MAAT,EACEP,CAAC,GAAG,IAAJ;AACH;;AAED,MAAMQ,GAAN,SAAkBnB,SAAlB,CAA4B;AAC1BoB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,WAZmB,GAYL,MAAM;AAClBV,MAAAA,YAAY,CAACW,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAe;AAAC,kBAAU,IAAX;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAf,CAA7B;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,MAAM,EAAE;AAAT,OAAd;AACD,KAfkB;;AAAA,SAiBnBS,UAjBmB,GAiBN,MAAM;AACjBf,MAAAA,YAAY,CAACW,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAe;AAAC,kBAAU,KAAX;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAAf,CAA7B;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,MAAM,EAAE,KAAT;AAAgBU,QAAAA,MAAM,EAAE,KAAxB;AAA+BC,QAAAA,KAAK,EAAE;AAAtC,OAAd;AACD,KApBkB;;AAAA,SAsBnBC,iBAtBmB,GAsBCL,MAAM,IAAI;AAC5Bb,MAAAA,YAAY,CAACW,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAe;AAAC,kBAAU,KAAX;AAAkBC,QAAAA;AAAlB,OAAf,CAA7B;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,MAAM,EAAE;AAAT,OAAd;AACD,KAzBkB;;AAAA,SA2BnBa,WA3BmB,GA2BL,MAAM;AAClB,WAAKL,QAAL,CAAcM,KAAK,KAAK;AACtBC,QAAAA,OAAO,EAAEvB,OAAO,CAACH,OAAO,CAACD,gBAAD,CAAR,CADM;AAEtBuB,QAAAA,KAAK,EAAE;AAFe,OAAL,CAAnB;AAID,KAhCkB;;AAAA,SAkCnBK,iBAlCmB,GAkCC,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACvC,UAAIH,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAzB;AACA,YAAMI,IAAI,GAAG5B,eAAe,CAACwB,OAAD,CAA5B;AACA,YAAMK,SAAS,GAAIF,QAAQ,CAACG,CAAT,KAAeF,IAAI,CAACE,CAApB,IAAyBC,IAAI,CAACC,GAAL,CAASL,QAAQ,CAACM,CAAT,GAAaL,IAAI,CAACK,CAA3B,MAAkC,CAA9E;AACA,YAAMC,YAAY,GAAIP,QAAQ,CAACM,CAAT,KAAeL,IAAI,CAACK,CAApB,IAAyBF,IAAI,CAACC,GAAL,CAASL,QAAQ,CAACG,CAAT,GAAaF,IAAI,CAACE,CAA3B,MAAkC,CAAjF;;AAEA,UAAIJ,KAAK,KAAK,CAAV,IAAe,EAAEQ,YAAY,IAAIL,SAAlB,CAAnB,EAAiD;AAC/C;AACD;;AACDL,MAAAA,OAAO,CAACG,QAAQ,CAACG,CAAV,CAAP,CAAoBH,QAAQ,CAACM,CAA7B,IAAkC,CAAlC;AACAT,MAAAA,OAAO,CAACI,IAAI,CAACE,CAAN,CAAP,CAAgBF,IAAI,CAACK,CAArB,IAA0BP,KAA1B;AAEA,UACES,OAAO,GAAG,CADZ;AAAA,UAEEhB,MAAM,GAAG,KAFX;AAIA,YAAMiB,EAAE,GAAIZ,OAAO,CAACnB,MAAR,GAAkBmB,OAAO,CAACA,OAAO,CAACnB,MAAR,GAAiB,CAAlB,CAAP,CAA4BA,MAA1D;;AAEA,WAAI,IAAIyB,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAGN,OAAO,CAACnB,MAA1B,EAAiCyB,CAAC,EAAlC,EACE,KAAI,IAAIG,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAGT,OAAO,CAACM,CAAD,CAAP,CAAWzB,MAA7B,EAAqC4B,CAAC,EAAtC,EACE,IAAIT,OAAO,CAACM,CAAD,CAAP,CAAWG,CAAX,MAAkBlC,OAAO,CAACF,gBAAD,CAAP,CAA0BiC,CAA1B,EAA6BG,CAA7B,CAAtB,EACEE,OAAO;;AAEb,UAAIA,OAAO,GAAGC,EAAd,EACED,OAAO,GAAG,CAAV;AACF,UAAIA,OAAO,KAAKC,EAAhB,EACEjB,MAAM,GAAG,IAAT;AAEF,WAAKF,QAAL,CAAcM,KAAK,sBACdA,KADc;AAEjBC,QAAAA,OAFiB;AAGjBJ,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc,CAHJ;AAIjBD,QAAAA,MAJiB;AAKjBkB,QAAAA,UAAU,EAAElB;AALK,QAAnB;AAOD,KArEkB;;AAAA,SAuEnBmB,iBAvEmB,GAuEC,MAClB,KAAKrB,QAAL,CAAc;AAACoB,MAAAA,UAAU,EAAE;AAAb,KAAd,CAxEiB;;AAAA,SA0EnBE,gBA1EmB,GA0EA,MACjB,KAAKtB,QAAL,CAAc;AAACuB,MAAAA,YAAY,EAAE;AAAf,KAAd,CA3EiB;;AAAA,SA6EnBC,eA7EmB,GA6ED,MAChB;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,EAGE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAE,KAAK5B,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAHF,CA9EiB;;AAAA,SAyFnB6B,YAzFmB,GAyFJ,MACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CAFF,CAFF,CA1FiB;;AAEjB,SAAKnB,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAEvB,OAAO,CAACH,OAAO,CAACD,gBAAD,CAAR,CADL;AAEXuB,MAAAA,KAAK,EAAE,CAFI;AAGXX,MAAAA,MAAM,EAAEP,CAHG;AAIXsC,MAAAA,YAAY,EAAE,KAJH;AAKXG,MAAAA,QAAQ,EAAE,KALC;AAMXN,MAAAA,UAAU,EAAE;AAND,KAAb;AAQD;;AA4FDO,EAAAA,MAAM,GAAG;AAAA,wBAC4D,KAAKrB,KADjE;AAAA,UACAd,MADA,eACAA,MADA;AAAA,UACQe,OADR,eACQA,OADR;AAAA,UACiBJ,KADjB,eACiBA,KADjB;AAAA,UACwBoB,YADxB,eACwBA,YADxB;AAAA,UACsCrB,MADtC,eACsCA,MADtC;AAAA,UAC8CkB,UAD9C,eAC8CA,UAD9C,EAGP;AACA;AACA;;AAEA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,YAAY,IAAI,KAAKE,YAAL,EADnB,EAEE;AAAK,MAAA,SAAS,4BAAqBL,UAAU,GAAG,MAAH,GAAY,EAA3C,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAA2C,MAAA,OAAO,EAAE,MAAM,KAAKC,iBAAL,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACO,QAAAA,QAAQ,EAAE;AAAX,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,EAQE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAACA,QAAAA,QAAQ,EAAE,EAAX;AAAeC,QAAAA,SAAS,EAAE,QAA1B;AAAoCC,QAAAA,SAAS,EAAE;AAA/C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiE3B,KAAjE,CADF,CARF,CADF,CAFF,EAgBGX,MAAM,GACH,oBAAC,IAAD;AACE,MAAA,MAAM,EAAEU,MADV;AAEE,MAAA,OAAO,EAAEK,OAFX;AAGE,MAAA,KAAK,EAAEJ,KAHT;AAIE,MAAA,MAAM,EAAE,KAAKF,UAJf;AAKE,MAAA,aAAa,EAAE,KAAKG,iBALtB;AAME,MAAA,OAAO,EAAE,KAAKC,WANhB;AAOE,MAAA,aAAa,EAAE,KAAKG,iBAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,GAUH,KAAKgB,eAAL,EA1BN,CADF;AA+BD;;AA7IyB;;AAgJ5B,eAAe/B,GAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Game from \"./components/Game\";\nimport SettingsIcon from \"react-icons/lib/fa/cog\";\nimport CloseIcon from \"react-icons/lib/fa/close\";\nimport TrophyIcon from \"react-icons/lib/fa/trophy\";\nimport { PUZZLE_MODE_EASY } from \"./utils/constants\";\nimport { Puzzles, Answers } from \"./utils/puzzles\";\nimport {getPositionZero, shuffle} from \"./utils\";\n\nlet s = false;\n\nif (localStorage.getItem(\"game\").length) {\n  let json = JSON.parse(localStorage.getItem(\"game\"));\n  if (json.status)\n    s = true;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: shuffle(Puzzles[PUZZLE_MODE_EASY]),\n      steps: 0,\n      status: s,\n      isConfigOpen: false,\n      isWinner: false,\n      openWinner: false\n    };\n  }\n\n  handleStart = () => {\n    localStorage.setItem(\"game\", JSON.stringify({\"status\": true, puzzle: []}));\n    this.setState({status: true});\n  };\n\n  handleExit = () => {\n    localStorage.setItem(\"game\", JSON.stringify({\"status\": false, puzzle: []}));\n    this.setState({status: false, winner: false, steps: 0});\n  };\n\n  handleSaveAndExit = puzzle => {\n    localStorage.setItem(\"game\", JSON.stringify({\"status\": false, puzzle}));\n    this.setState({status: false});\n  };\n\n  handleReset = () => {\n    this.setState(state => ({\n      squares: shuffle(Puzzles[PUZZLE_MODE_EASY]),\n      steps: 0\n    }));\n  };\n\n  handleClickSquare = (value, position) => {\n    let squares = this.state.squares;\n    const zero = getPositionZero(squares);\n    const isSameRow = (position.i === zero.i && Math.abs(position.j - zero.j) === 1);\n    const isSameColumn = (position.j === zero.j && Math.abs(position.i - zero.i) === 1);\n\n    if (value === 0 || !(isSameColumn || isSameRow)) {\n      return;\n    }\n    squares[position.i][position.j] = 0;\n    squares[zero.i][zero.j] = value;\n\n    let\n      counter = 0,\n      winner = false;\n\n    const le = (squares.length * (squares[squares.length - 1].length));\n\n    for(let i = 0;i < squares.length;i++)\n      for(let j = 0;j < squares[i].length; j++)\n        if (squares[i][j] === Answers[PUZZLE_MODE_EASY][i][j])\n          counter++;\n\n    if (counter < le)\n      counter = 0;\n    if (counter === le)\n      winner = true;\n\n    this.setState(state => ({\n      ...state,\n      squares,\n      steps: state.steps + 1,\n      winner,\n      openWinner: winner\n    }));\n  };\n\n  handleCloseWinner = () =>\n    this.setState({openWinner: false});\n\n  handleOpenConfig = () =>\n    this.setState({isConfigOpen: true});\n\n  renderFirstPage = () =>\n    <div className=\"first-page\">\n      <div className=\"first-page__title\">N-PUZZLE</div>\n      <div className=\"first-page__subtitle\">Venha se divertir</div>\n      <div className=\"first-page__action-container\">\n        <button className=\"btn-start\" onClick={this.handleStart}>Jogar</button>\n        {/*<button className=\"btn-config\" onClick={this.handleOpenConfig}>\n          <SettingsIcon/>\n        </button>*/}\n      </div>\n    </div>;\n\n  renderConfig = () =>\n    <div>\n      <div>Configurações</div>\n      <div>\n        <label>Nível:</label>\n        <select>\n          <option>Fácil</option>\n          <option>Médio</option>\n          <option>Difícil</option>\n        </select>\n      </div>\n    </div>;\n\n  render() {\n    const {status, squares, steps, isConfigOpen, winner, openWinner} = this.state;\n\n    //todo: logica para salvar o jogo e sair.\n    //todo: criar as views (IntroView e GameView).\n    //todo: logica para configuracoes.\n\n    return (\n      <Fragment>\n        {isConfigOpen && this.renderConfig()}\n        <div className={`winner-backdrop ${openWinner ? 'show' : ''}`}>\n          <div className=\"winner-container\">\n            <div className=\"winner-container__dismiss\" onClick={() => this.handleCloseWinner()}>\n              <CloseIcon/>\n            </div>\n            <div className=\"winner-container__title\">Parabéns!</div>\n            <div>\n              <TrophyIcon style={{fontSize: 64}}/>\n            </div>\n            <div className=\"winner-container__body\">\n              <div style={{fontSize: 24, textAlign: \"center\", marginTop: 20}}>{steps}</div>\n            </div>\n          </div>\n        </div>\n        {status\n          ? <Game\n              winner={winner}\n              squares={squares}\n              steps={steps}\n              onExit={this.handleExit}\n              onSaveAndExit={this.handleSaveAndExit}\n              onReset={this.handleReset}\n              onClickSquare={this.handleClickSquare}\n            />\n          : this.renderFirstPage()\n        }\n      </Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}